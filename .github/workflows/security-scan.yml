name: DevSec Scanner CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run unit tests
        run: |
          pytest --maxfail=1 --disable-warnings -v
      - name: Run integration test
        run: |
          bash deploy/integration-test.sh

  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t devsecscanner .
      - name: Run Docker healthcheck
        run: docker run --rm devsecscanner python -c "import sys; sys.exit(0)"

  release:
    runs-on: ubuntu-latest
    needs: [test, docker]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Bump version and tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          python scripts/bump_version.py
          git push --follow-tags
      - name: Publish Docker image
        run: |
          echo "Publishing Docker image (placeholder)"
      - name: Generate docs
        run: |
          echo "Generating docs (placeholder)"

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Security Scanner
        run: |
          python main_scanner.py --ai-enabled --output-format json --severity-filter medium --export scan-results.json --parallel --timeout 600 --scanners ${{ github.event.inputs.scan_type || 'all' }}
      - name: Upload scan report artifact
        uses: actions/upload-artifact@v4
        with:
          name: devsec-scan-report
          path: scan-results.json
          retention-days: 14
      - name: Comment on PR with summary
        if: github.event_name == 'pull_request'
        run: |
          python src/devsec_scanner/github/pr_commenter.py --report scan-results.json --pr ${{ github.event.pull_request.number }}
      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scan-results.sarif
